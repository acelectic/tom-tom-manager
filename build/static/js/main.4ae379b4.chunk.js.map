{"version":3,"sources":["services/payment/payment-types.tsx","services/payment/payment-query.tsx","utils/api/tools.tsx","utils/api/tom-tom-client.tsx","utils/api/index.tsx","services/auth/auth-query.tsx","services/user/user-query.tsx","services/auth/auth-types.tsx","constant/paths.tsx","pages/404/index.tsx","utils/helper.tsx","components/layout/Navbar.tsx","components/layout/SideMenu.tsx","components/layout/index.tsx","components/BasicList.tsx","components/commons/Page.tsx","constant/contexts.tsx","pages/Admin/UpdateUser.tsx","pages/Admin/index.tsx","pages/Dashboard/TransactionCharts.tsx","pages/Dashboard/index.tsx","components/commons/Authenlize.tsx","pages/Payment/index.tsx","components/ModalCreate.tsx","components/AddButton.tsx","pages/Resource/index.tsx","pages/Transaction/TransactionForm.tsx","pages/Transaction/index.tsx","pages/User/index.tsx","routes/protected.tsx","pages/Auth/index.tsx","routes/index.tsx","constant/i18n/index.tsx","initialize.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/commons/Input.tsx","components/commons/MultiSelect.tsx","components/commons/Radio.tsx","components/commons/Select.tsx","components/fields/tools.tsx","components/fields/index.tsx","components/commons/Space.tsx","services/auth/auth-action.tsx","services/transaction/transaction-query.tsx","components/commons/Text.tsx","services/resource/resource-query.tsx"],"names":["PaymentType","PAYMENT_URL","useGetPayments","useQuery","a","api","tomtom","get","data","payments","map","payment","user","resource","transaction","createdAt","restPayment","userName","name","price","join","ref","toString","padStart","date","dayjs","tz","format","useCreatePayment","queryClient","useQueryClient","useMutation","params","userId","resourceId","transactionId","type","post","BUY","undefined","PAID","Number","onSuccess","invalidateQueries","ContentType","customClientWithData","url","method","option","contentType","JSON","restOption","headers","customClient","deepLoop","func","File","Array","d","Object","formatData","keys","forEach","key","require","config","client","apiWraper","modifyRequestData","isDayjs","tomtomClient","ax","axios","create","withCredentials","interceptors","request","use","token","getToken","common","FORMDATA","formData","FormData","entries","value","val","append","XFORM","qs","stringify","customRequestData","response","includes","humps","camelizeKeys","error","Promise","reject","createClient","res","resolve","message","errorMessage","param","put","patch","delete","getFile","responseType","HEALTH_URL","AUTH","SIGN_IN","SIGN_OUT","CURRENT_USER","USER_URL","useApiHealth","console","log","padEnd","retry","cacheTime","staleTime","useCurrUser","enabled","onError","removeToken","useSignIn","accessToken","setToken","setQueryData","useSignOut","removeQueries","CHANGE_ROLE_URL","UPDATE_USER_URL","useGetUsers","users","useCreateUser","useChangeRole","role","useUpdateUser","password","Role","generate","routeParam","queryParam","newQueryParam","newUrl","split","u","test","slice","notFound","signIn","dashboard","userDetail","resources","transactions","admin","PageNotFound","t","useTranslation","Text","size","weight","to","paths","style","marginTop","createCtx","initValue","createContext","reset","initialValue","overwriteMerge","destinationArray","sourceArray","options","numberWithCommas","digit","isNumber","toLocaleString","minimumFractionDigits","maximumFractionDigits","Layout","styled","div","Right","Title","withStyles","theme","createStyles","root","fontSize","fontWeight","color","textShadow","Typography","NavBar","signOut","mutate","Space","balance","Box","textDecoration","onClick","Menu","props","path","label","SideMenu","process","email","Wrapper","section","Container","children","StyledTableCell","head","backgroundColor","palette","black","white","body","TableCell","StyledTableRow","action","hover","TableRow","BasicList","columns","renderActions","renderRow","useCallback","index","align","k","colData","component","scope","id","renderHeaderColumns","capitalize","TableContainer","Paper","Table","aria-label","TableHead","width","className","TableBody","Page","title","UpdateUserCtx","visible","Context","useStyles","makeStyles","layout","padding","avatar","blue","button","margin","spacing","UpdateUser","classes","updateUser","useContext","state","handleClose","onSubmit","values","roleOptions","useMemo","USER","MANAGER","ADMIN","Dialog","onClose","aria-labelledby","open","initialValues","handleSubmit","direction","Button","variant","startIcon","withCtx","Component","initalState","_currentValue","useState","setState","useRef","customSetState","v","newState","deepmerge","current","arrayMerge","isEqual","Provider","changeRole","renderButtonAction","userRole","roles","colors","TransactionChart","useGetTransactions","labels","datasets","yAxisID","borderColor","pointBorderColor","pointHoverBackgroundColor","remain","totalUser","height","scales","Price","text","display","position","min","max","ticks","stepSize","Remain","TotalUser","Dashboard","Authenlize","PaymentForm","lazy","Payment","fallback","useAppModalStyles","appModal","alignItems","justifyContent","flexFlow","background","borderRadius","outline","header","marginBottom","textAlign","closeIcon","footer","marginRight","ModalCreate","fieldNames","closeModal","renderField","fieldName","placeholder","required","Modal","aria-describedby","disablePortal","disableEnforceFocus","disableAutoFocus","disableRestoreFocus","onBackdropClick","submitError","AddButton","setVisible","openModal","onModalSubmit","Resource","useGetResources","createResource","useCreateResource","FormLayout","form","TransactionForm","createTransaction","useCreateTransaction","usersOption","resourcesOption","userIds","resourceIds","Transaction","Users","createUser","ProtectedRoute","exact","from","Admin","SignIn","mutateAsync","justify","alignItem","htmlFor","Routes","isLoading","isAuthorized","th","translation","en","i18next","initReactI18next","init","fallbackLng","lng","dayJS","extend","utc","timezone","customParseFormat","setDefault","QueryClient","App","I18nextProvider","i18n","QueryClientProvider","initialIsOpen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","Input","disabled","restProps","TextField","formControl","minWidth","maxWidth","chips","flexWrap","chip","noLabel","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","getStyles","personName","indexOf","typography","fontWeightRegular","fontWeightMedium","MultiSelect","onChange","useTheme","handleChange","event","target","optionsHash","hash","FormControl","InputLabel","labelId","multiple","input","renderValue","selected","Chip","MenuItem","Radio","renderRadio","FormControlLabel","control","FormLabel","RadioGroup","selectEmpty","Select","paddingRight","paddingLeft","native","inputProps","makeField","newComponent","meta","touched","isError","InputField","MultiSelectField","SelectField","RadioField","alignContent","flatten","elm","localStorage","getItem","setItem","removeItem","TRANSACTION_URL","modifyTransaction","completed","restTransactoion","length","StyledText","wrap","RESOURCE_URL","rest"],"mappings":"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","file":"static/js/main.4ae379b4.chunk.js","sourcesContent":["import { UserEntity } from '../auth/auth-types'\nimport { ResourceEntity } from '../resource/resource-types'\nimport { TransactionEntity } from '../transaction/transaction-types'\n\nexport enum PaymentType {\n  BUY = 'buy',\n  PAID = 'paid',\n}\n\nexport interface PaymentEntity {\n  ref: number\n  price: number\n  type: PaymentType\n  user: UserEntity\n  resource: ResourceEntity\n  transaction: TransactionEntity\n  createdAt: string\n}\n\nexport interface GetPaymentsResponse {\n  payments: PaymentEntity[]\n}\n\nexport interface CreatePaymentParams {\n  price: number\n  type: PaymentType\n  userId: string\n  transactionId: string\n  resourceId: string\n}\nexport interface CreatePaymentResponse extends PaymentEntity {}\n","import dayjs from 'dayjs'\nimport { useMutation, useQuery, useQueryClient } from 'react-query'\nimport { api } from '../../utils/api'\nimport {\n  CreatePaymentParams,\n  CreatePaymentResponse,\n  GetPaymentsResponse,\n  PaymentType,\n} from './payment-types'\n\nexport const PAYMENT_URL = 'payments'\n\nexport const useGetPayments = () => {\n  return useQuery([PAYMENT_URL], async () => {\n    const { data } = await api.tomtom.get<GetPaymentsResponse>(PAYMENT_URL)\n    const payments = data.payments.map((payment) => {\n      const { user, resource, transaction, createdAt, ...restPayment } = payment\n      return {\n        userName: user.name,\n        resource: [resource.name, resource.price].join(', '),\n        transaction: transaction?.ref.toString().padStart(6, '0'),\n        ...restPayment,\n        date: dayjs(createdAt).tz('Asia/Bangkok').format('DD/MM/YYYY hh:mm:ss'),\n      }\n    })\n    return payments\n  })\n}\n\nexport const useCreatePayment = () => {\n  const queryClient = useQueryClient()\n  return useMutation(\n    [PAYMENT_URL],\n    async (params: CreatePaymentParams) => {\n      const { userId, resourceId, transactionId, type, price } = params\n      const { data } = await api.tomtom.post<CreatePaymentResponse>(\n        PAYMENT_URL,\n        {\n          userId,\n          type,\n          resourceId: type === PaymentType.BUY ? resourceId : undefined,\n          transactionId: type === PaymentType.PAID ? transactionId : undefined,\n          price: Number(price),\n        },\n      )\n      return data\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries([PAYMENT_URL])\n      },\n    },\n  )\n}\n","import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios'\nimport qs from 'qs'\n\nexport enum ContentType {\n  XFORM = 'application/x-www-form-urlencoded',\n  JSON = 'application/json',\n  FORMDATA = 'multipart/form-data',\n}\n\nconst customClientWithData = (\n  url: string,\n  method: AxiosInstance['put'] | AxiosInstance['post'] | AxiosInstance['patch'],\n  data: any,\n  option?: AxiosRequestConfig & { contentType: ContentType },\n) => {\n  const { contentType = ContentType.JSON, ...restOption } = option || {}\n  return method(url, data, {\n    headers: {\n      'Content-Type': contentType,\n    },\n    ...restOption,\n  })\n}\n\nconst customClient = (\n  url: string,\n  method: AxiosInstance['delete'] | AxiosInstance['get'],\n  params: any,\n  option?: AxiosRequestConfig & { contentType?: ContentType },\n) => {\n  const { contentType = ContentType.JSON, ...restOption } = option || {}\n  return method(url, {\n    params,\n    headers: {\n      'Content-Type': contentType,\n    },\n    ...restOption,\n  })\n}\n\nexport type ResponseData<T> = Promise<AxiosResponse<T>>\n\nexport const createMethod = (\n  client: AxiosInstance,\n  apiWraper: (method: Promise<AxiosResponse>) => Promise<any>,\n) => ({\n  get: <T extends unknown>(\n    url: string,\n    param?: any,\n    option?: AxiosRequestConfig & { contentType: ContentType },\n  ): ResponseData<T> => apiWraper(customClient(url, client.get, param, option)),\n  put: <T extends unknown>(\n    url: string,\n    data?: any,\n    option?: AxiosRequestConfig & { contentType: ContentType },\n  ): ResponseData<T> =>\n    apiWraper(customClientWithData(url, client.put, data, option)),\n  post: <T extends unknown>(\n    url: string,\n    data?: any,\n    option?: AxiosRequestConfig & { contentType: ContentType },\n  ): ResponseData<T> =>\n    apiWraper(customClientWithData(url, client.post, data, option)),\n  patch: <T extends unknown>(\n    url: string,\n    data?: any,\n    option?: AxiosRequestConfig & { contentType: ContentType },\n  ): ResponseData<T> =>\n    apiWraper(customClientWithData(url, client.patch, data, option)),\n  delete: <T extends unknown>(\n    url: string,\n    param?: any,\n    option?: AxiosRequestConfig & { contentType: ContentType },\n  ): ResponseData<T> =>\n    apiWraper(customClient(url, client.delete, param, option)),\n  getFile: <T extends Blob>(\n    url: string,\n    param?: any,\n    option?: AxiosRequestConfig & { contentType?: ContentType },\n  ): ResponseData<T> =>\n    apiWraper(\n      customClient(url, client.get, param, { responseType: 'blob', ...option }),\n    ),\n})\n\nexport const customRequestData = (request: any) => {\n  if (request.headers['Content-Type'] === ContentType.FORMDATA) {\n    if (request.data) {\n      const formData = new FormData()\n      Object.entries(request.data).forEach(([key, value]: any[]) => {\n        if (value instanceof Array) {\n          value.forEach((val) => {\n            formData.append(`${key}`, val)\n          })\n        } else {\n          formData.append(key, value)\n        }\n      })\n      // console.log(formData.get('files')?.toString())\n      request.data = formData\n    }\n  } else if (request.headers['Content-Type'] === ContentType.XFORM) {\n    if (request.data) {\n      request.data = qs.stringify(request.data)\n    }\n  } else if (request.headers['Content-Type'] === ContentType.JSON) {\n  }\n}\n\nexport const deepLoop = (data: any, func: (data: any) => any): any => {\n  if (data instanceof File) {\n    return func(data)\n  }\n  if (data instanceof Array) {\n    return data.map((d) => deepLoop(d, func))\n  }\n  if (data instanceof Object) {\n    const formatData: any = {}\n    Object.keys(data).forEach((key) => {\n      formatData[key] = deepLoop(data[key], func)\n    })\n    return formatData\n  }\n  return func(data)\n}\n","import axios, { AxiosResponse } from 'axios'\nimport dayjs from 'dayjs'\nimport humps from 'humps'\nimport { getToken } from '../../services/auth/auth-action'\nimport { customRequestData, deepLoop } from './tools'\nrequire('dotenv').config()\n\nconst createClient = () => {\n  const ax = axios.create({\n    withCredentials: true,\n  })\n  ax.interceptors.request.use((request: any) => {\n    // const host = process.env.REACT_APP_API_HOST\n    const host = 'http://127.0.0.1:8626/api/v1'\n\n    request.url = `${host}/${request.url}`\n\n    const token = getToken()\n    request.headers.common['Authorization'] = `Bearer ${token}`\n\n    if (request.params) {\n      request.params = deepLoop(request.params, modifyRequestData)\n    }\n    if (request.data) {\n      request.data = deepLoop(request.data, modifyRequestData)\n      // request.data = humps.decamelizeKeys(request.data)\n      customRequestData(request)\n    }\n    return request\n  })\n  ax.interceptors.response.use(\n    (response: AxiosResponse<any>) => {\n      if (response.headers['content-type'].includes('application/json')) {\n        response.data = humps.camelizeKeys(response.data)\n        // deepLoop(response.data, data => {\n        //   return data\n        // })\n      }\n      return response\n    },\n    (error: any) => Promise.reject(error),\n  )\n  return ax\n}\n\nconst modifyRequestData = (data: any) => {\n  if (dayjs.isDayjs(data)) {\n    return data.format()\n  }\n  return data\n}\n\nexport const tomtomClient = createClient()\n\nexport const tomtomApiWraper = async (method: Promise<AxiosResponse>) => {\n  try {\n    const res = await method\n    return Promise.resolve(res)\n  } catch (e) {\n    const { response, message } = e\n    const { data } = response || {}\n    const { message: errorMessage } = data || {}\n    return Promise.reject(errorMessage || message || e)\n  }\n}\n","import { tomtomClient, tomtomApiWraper } from './tom-tom-client'\n\nimport { createMethod } from './tools'\n\nexport const api = {\n  tomtom: createMethod(tomtomClient, tomtomApiWraper),\n}\n","import { useMutation, useQuery, useQueryClient } from 'react-query'\nimport { api } from '../../utils/api'\nimport { USER_URL } from '../user/user-query'\nimport { getToken, removeToken, setToken } from './auth-action'\nimport { SigninParams, SigninResponse, UserEntity } from './auth-types'\n\nexport const HEALTH_URL = 'health'\nexport const AUTH = 'auth'\nexport const SIGN_IN = `${AUTH}/register`\nexport const SIGN_OUT = `${AUTH}/sign-out`\n\nexport const CURRENT_USER = `${USER_URL}/current-user`\n\nexport const useApiHealth = () => {\n  return useQuery([HEALTH_URL], () => api.tomtom.get(HEALTH_URL), {\n    onSuccess: () => {\n      console.log(' Server is running '.padStart(10, '-').padEnd(10, '-'))\n    },\n    retry: 2,\n    cacheTime: 10 * 60 * 1000,\n    staleTime: 10 * 60 * 1000,\n  })\n}\n\nexport const useCurrUser = () => {\n  return useQuery(\n    [USER_URL, CURRENT_USER],\n    async () => {\n      const response = await api.tomtom.get<UserEntity>(CURRENT_USER)\n      return response.data\n    },\n    {\n      staleTime: 10 * 60 * 1000,\n      cacheTime: 10 * 60 * 1000,\n      enabled: !!getToken(),\n      onError: () => {\n        removeToken()\n      },\n      retry: 0,\n    },\n  )\n}\n\n// export const useUser = (params: GetUserParams) => {\n//   const { userId, relations: dupRelations = [] } = params\n//   const relations = uniq(dupRelations)\n//   return useQuery<CurrentUser | undefined>(\n//     [USERS, { userId, relations }],\n//     async () => {\n//       const response = await api.blcpIdp.get<CurrentUser>(`${USERS}/${userId}`, { relations })\n//       return response.data\n//     },\n//     {\n//       retry: 0,\n//       enabled: !!userId,\n//     },\n//   )\n// }\n\nexport const useSignIn = () => {\n  const queryClient = useQueryClient()\n  return useMutation(\n    async (params: SigninParams) => {\n      const { data } = await api.tomtom.post<SigninResponse>(SIGN_IN, params)\n      return data\n    },\n    {\n      onSuccess: (data) => {\n        const { accessToken, user } = data\n        setToken(accessToken)\n        queryClient.setQueryData([USER_URL, CURRENT_USER], user)\n      },\n    },\n  )\n}\n\n// export const useLoginForTest = () => {\n//   const queryClient = useQueryClient()\n//   return useMutation(\n//     async (params: SigninParams) => {\n//       const { data } = await api.blcpIdp.post<SigninResponse>(`${SIGN_IN}/email`, params)\n//       return data\n//     },\n//     {\n//       onSuccess: (data) => {\n//         const { accessToken, user } = data\n//         setToken(accessToken)\n//         queryClient.setQueryData([CURRENT_USER], user)\n//       },\n//     },\n//   )\n// }\n\nexport const useSignOut = () => {\n  const queryClient = useQueryClient()\n  return useMutation(\n    async () => {\n      return api.tomtom.post(SIGN_OUT)\n    },\n    {\n      onSuccess: () => {\n        removeToken()\n        queryClient.invalidateQueries([USER_URL, CURRENT_USER])\n        queryClient.removeQueries()\n      },\n    },\n  )\n}\n","import { useMutation, useQuery, useQueryClient } from 'react-query'\nimport { api } from '../../utils/api'\nimport { SIGN_IN } from '../auth/auth-query'\nimport { SigninParams, SigninResponse } from '../auth/auth-types'\nimport {\n  ChangeRoleParams,\n  GetUsersResponse,\n  UpdateUserParams,\n} from './user-types'\n\nexport const USER_URL = 'users'\nexport const CHANGE_ROLE_URL = `change-role`\nexport const UPDATE_USER_URL = `update`\n\nexport const useGetUsers = () => {\n  return useQuery([USER_URL], async () => {\n    const { data } = await api.tomtom.get<GetUsersResponse>(USER_URL)\n    return data.users\n  })\n}\n\nexport const useCreateUser = () => {\n  const queryClient = useQueryClient()\n  return useMutation(\n    async (params: SigninParams) => {\n      const { data } = await api.tomtom.post<SigninResponse>(SIGN_IN, params)\n      return data\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries([USER_URL])\n      },\n    },\n  )\n}\n\nexport const useChangeRole = () => {\n  const queryClient = useQueryClient()\n  return useMutation(\n    [USER_URL, CHANGE_ROLE_URL],\n    async (params: ChangeRoleParams) => {\n      const { userId, role } = params\n      if (!userId) return\n      const { data } = await api.tomtom.patch(\n        `${USER_URL}/${userId}/${CHANGE_ROLE_URL}`,\n        {\n          role,\n        },\n      )\n      return data\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries([USER_URL])\n      },\n    },\n  )\n}\n\nexport const useUpdateUser = () => {\n  const queryClient = useQueryClient()\n  return useMutation(\n    [USER_URL, UPDATE_USER_URL],\n    async (params: UpdateUserParams) => {\n      const { userId, name, password, role } = params\n      if (!userId) return\n      const { data } = await api.tomtom.patch(\n        `${USER_URL}/${userId}/${UPDATE_USER_URL}`,\n        {\n          name,\n          password,\n          role,\n        },\n      )\n      return data\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries([USER_URL])\n      },\n    },\n  )\n}\n","// const USER_RELATION = [\n//   'position',\n//   'position.department',\n//   'position.department.jobFunction',\n//   'idpPlanningsApproves',\n// ] as const\n// export type GetUserIncludesRelation = typeof USER_RELATION[number][]\n// export type GetUserParams = {\n//   userId: string\n//   relations?: GetUserIncludesRelation\n// }\nexport enum Role {\n  ADMIN = 'admin',\n  MANAGER = 'manager',\n  USER = 'user',\n  VIEVWER = 'viewer',\n}\n\nexport interface UserEntity {\n  id: string\n  createdAt: string\n  updatedAt: string\n  deletedAt: string\n  email: string\n  lastSignInAt: string\n  name: string\n  role: Role\n  balance: number\n}\nexport type SigninParams = {\n  email: string\n  password: string\n  name?: string\n}\n\nexport type SigninResponse = {\n  accessToken: string\n  user: UserEntity\n}\n","import qs from 'querystring'\n\ntype ParamType = { [p: string]: any } | undefined\ntype Option<T extends ParamType, V extends ParamType> = {\n  routeParam?: T\n  queryParam?: V\n}\n\nexport const generate = <\n  T extends ParamType = undefined,\n  V extends ParamType = undefined\n>(\n  url: string,\n) => (option?: Option<T, V>) => {\n  const { routeParam, queryParam } = option || {}\n  let newQueryParam = ''\n  if (queryParam) {\n    newQueryParam = `?${qs.stringify(queryParam)}`\n  }\n\n  let newUrl = url\n  if (routeParam) {\n    const urls = url.split('/')\n    newUrl = urls\n      .map((u) => {\n        if (/:.+/.test(u)) {\n          return routeParam[u.slice(1)]\n        }\n        return u\n      })\n      .join('/')\n  }\n\n  return `${newUrl}${newQueryParam}`\n}\n\nconst notFound = generate('/404')\nconst signIn = generate('/signIn')\nconst dashboard = generate('/dashboard')\nconst users = generate('/users')\nconst userDetail = generate<{ userId: string }>('/users/:userId')\nconst resources = generate('/resources')\nconst transactions = generate('/transactions')\nconst payments = generate('/payments')\n\nconst admin = generate('/admin')\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  notFound,\n  signIn,\n  dashboard,\n  users,\n  userDetail,\n  resources,\n  transactions,\n  payments,\n  admin,\n}\n","import { Link } from 'react-router-dom'\nimport paths from '../../constant/paths'\nimport { useTranslation } from 'react-i18next'\nimport Text from '../../components/commons/Text'\n\nconst PageNotFound = () => {\n  const { t } = useTranslation()\n  return (\n    <div>\n      <div>\n        <Text size={40} weight={700}>\n          404 Page Not Found\n        </Text>\n        <Text size={20}>{t('title.pageNotFound')}</Text>\n        <Link to={paths.dashboard()} style={{ marginTop: 30 }}>\n          <Text size={16}>Go to Dashboard</Text>\n        </Link>\n      </div>\n    </div>\n  )\n}\nexport default PageNotFound\n","import deepmerge from 'deepmerge'\nimport { isEqual, isNumber } from 'lodash'\nimport {\n  Context,\n  createContext,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nexport const createCtx = <T extends object>(initValue: T) => {\n  return createContext<\n    [T, (value: DeepPartial<T>) => void, { reset: () => void; initialValue: T }]\n  >([\n    initValue,\n    (value: DeepPartial<T>) => {},\n    {\n      reset: () => {},\n      initialValue: initValue,\n    },\n  ])\n}\n\nconst overwriteMerge = (\n  destinationArray: any,\n  sourceArray: any,\n  options: any,\n) => sourceArray\n\nexport const withCtx = <T extends AnyObject = AnyObject>(\n  Context: Context<any>,\n) => (Component: React.ElementType) => (props: T) => {\n  const initalState = useMemo(() => {\n    return (Context as any)._currentValue[0] || {}\n  }, [])\n  const [state, setState] = useState(initalState)\n  const ref = useRef(state)\n  const customSetState = useCallback((v: any) => {\n    const newState = deepmerge(ref.current, v, { arrayMerge: overwriteMerge })\n    if (!isEqual(newState, ref.current)) {\n      ref.current = newState\n      setState(newState)\n    }\n  }, [])\n  const reset = useCallback(() => {\n    if (!isEqual(initalState, ref.current)) {\n      ref.current = initalState\n      setState(initalState)\n    }\n  }, [initalState])\n\n  return (\n    <Context.Provider\n      value={[state, customSetState, { reset, initialValue: initalState }]}\n    >\n      <Component {...props} />\n    </Context.Provider>\n  )\n}\n\nexport const sleep = (ms: number) =>\n  new Promise((resolve) => setTimeout(resolve, ms))\n\nexport const numberWithCommas = (\n  value: number,\n  digit: number | undefined = undefined,\n) => {\n  return isNumber(value)\n    ? value.toLocaleString(undefined, {\n        minimumFractionDigits: digit,\n        maximumFractionDigits: digit,\n      })\n    : value\n}\n","import styled from '@emotion/styled'\nimport {\n  Box,\n  createStyles,\n  Theme,\n  Typography,\n  withStyles,\n} from '@material-ui/core'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport paths from '../../constant/paths'\nimport { useCurrUser, useSignOut } from '../../services/auth/auth-query'\nimport { numberWithCommas } from '../../utils/helper'\nimport Space from '../commons/Space'\nconst Layout = styled.div`\n  background-color: rgba(212, 123, 120, 1);\n  display: flex;\n  align-items: baseline;\n  flex: 1;\n  flex-flow: row;\n  padding: 15px;\n`\nconst Right = styled.div`\n  margin-left: auto;\n  align-self: center;\n  > .space-warpper {\n    display: flex;\n    align-items: center;\n    flex-flow: row;\n  }\n`\n\nconst Title = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      fontSize: 40,\n      fontWeight: 'bold',\n      color: 'white',\n      textShadow: '2px 2px rgba(0,0,0,0.5)',\n    },\n  }),\n)(Typography)\n\nconst NavBar = () => {\n  const { data: user } = useCurrUser()\n  const { mutate: signOut } = useSignOut()\n\n  return (\n    <Layout>\n      <Title>Tom Manager</Title>\n      <Right>\n        <Space>\n          <Title style={{ fontSize: 24 }}>{`Hello: ${user?.name}`}</Title>\n          <Title style={{ fontSize: 24 }}>\n            {`Your Balance: ${numberWithCommas(user?.balance || 0)}`}\n          </Title>\n          <Box>\n            <Link\n              to={paths.signIn()}\n              style={{\n                textDecoration: 'none',\n              }}\n              onClick={() => {\n                signOut()\n              }}\n            >\n              <Typography\n                style={{\n                  fontSize: 22,\n                  color: 'WindowText',\n                  fontWeight: 'bold',\n                }}\n              >\n                Sign Out\n              </Typography>\n            </Link>\n          </Box>\n        </Space>\n      </Right>\n    </Layout>\n  )\n}\nexport default NavBar\n","import { Box, Typography } from '@material-ui/core'\nimport paths from '../../constant/paths'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport { useCurrUser } from '../../services/auth/auth-query'\ninterface MenuProps {\n  path: string\n  label: string\n}\nconst Menu = (props: MenuProps) => {\n  return (\n    <Box>\n      <Link\n        to={props.path}\n        style={{\n          textDecoration: 'none',\n        }}\n      >\n        <Typography style={{ color: 'WindowText', fontWeight: 'bold' }}>\n          {props.label}\n        </Typography>\n      </Link>\n    </Box>\n  )\n}\n\nconst SideMenu = () => {\n  const { t } = useTranslation()\n  const { data: user } = useCurrUser()\n  return (\n    <div>\n      <Menu path={paths.dashboard()} label={t('page.dashboard')} />\n      <Menu path={paths.users()} label={t('page.users')} />\n      <Menu path={paths.resources()} label={t('page.resources')} />\n      <Menu path={paths.transactions()} label={t('page.transactions')} />\n      <Menu path={paths.payments()} label={t('page.payments')} />\n      {process.env.REACT_APP_ADMIN_EMAIL &&\n        user?.email === process.env.REACT_APP_ADMIN_EMAIL && (\n          <Menu path={paths.admin()} label={t('page.admin')} />\n        )}\n    </div>\n  )\n}\nexport default SideMenu\n","import styled from '@emotion/styled'\nimport { PropsWithChildren } from 'react'\nimport NavBar from './Navbar'\nimport SideMenu from './SideMenu'\nconst Wrapper = styled.section`\n  width: 100vw;\n  height: 100vh;\n  display: grid;\n  grid-template-rows: max-content auto;\n`\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: max-content auto;\n\n  main,\n  aside {\n    height: 100%;\n    width: 100%;\n  }\n  main {\n    > div {\n      padding: 20px;\n    }\n  }\n  aside {\n    width: 300px;\n    background-color: rgb(211, 230, 224);\n    > div {\n      padding: 15px 0;\n      > div,\n      > a {\n        padding: 10px 30px;\n      }\n    }\n  }\n`\n\ninterface LayoutProps {}\nconst Layout = (props: PropsWithChildren<LayoutProps>) => {\n  const { children } = props\n  return (\n    <Wrapper>\n      <nav>\n        <NavBar />\n      </nav>\n      <Container>\n        <aside>\n          <SideMenu />\n        </aside>\n        <main>\n          <div>{children}</div>\n        </main>\n      </Container>\n    </Wrapper>\n  )\n}\nexport default Layout\n","import { ReactNode, useCallback } from 'react'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport { capitalize, isNumber } from 'lodash'\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }),\n)(TableCell)\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }),\n)(TableRow)\n\ntype BasicListProps<T extends AnyObject[], K> = {\n  data: T | undefined\n  columns: K\n  renderActions?: (data: T[number]) => ReactNode\n}\nconst BasicList = <T extends AnyObject[], K extends (keyof T[number])[]>(\n  props: BasicListProps<T, K>,\n) => {\n  const { data, columns, renderActions } = props\n\n  const renderRow = useCallback(\n    (d: T[number], index: number) => {\n      return (\n        <StyledTableRow key={d.id}>\n          <StyledTableCell align=\"left\">{index + 1}</StyledTableCell>\n          {columns.map((k) => {\n            const colData = d[k]\n            return (\n              <StyledTableCell\n                key={`${d.id}-${index}-${k}`}\n                component=\"th\"\n                scope=\"row\"\n              >\n                {isNumber(colData) || colData ? colData : '-'}\n              </StyledTableCell>\n            )\n          })}\n          {renderActions && (\n            <StyledTableCell key={`action`} component=\"th\" scope=\"row\">\n              {renderActions(d)}\n            </StyledTableCell>\n          )}\n        </StyledTableRow>\n      )\n    },\n    [columns, renderActions],\n  )\n\n  const renderHeaderColumns = useCallback((k, index) => {\n    const key = k as string\n    return (\n      <StyledTableCell key={`${index}-${key}`} align=\"left\">\n        {capitalize(key)}\n      </StyledTableCell>\n    )\n  }, [])\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell width={'40px'} align=\"center\">\n              #\n            </StyledTableCell>\n            {columns.map(renderHeaderColumns)}\n            {renderActions && (\n              <StyledTableCell\n                key={`action`}\n                className=\"actions\"\n              ></StyledTableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        <TableBody>{data && data.map(renderRow)}</TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\nexport default BasicList\n","import { PropsWithChildren } from 'react'\n\nexport interface PageProps {\n  title: string\n}\nconst Page = (props: PropsWithChildren<PageProps>) => {\n  return (\n    <div>\n      <h4>{props.title}</h4>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Page\n","import { Role } from '../services/auth/auth-types'\nimport { createCtx } from '../utils/helper'\n\nexport const AppCtx = createCtx({})\nexport const UpdateUserCtx = createCtx({\n  visible: false,\n  userId: '',\n  name: '',\n  password: '',\n  role: '' as Role,\n})\n","import { useCallback, useContext, useMemo } from 'react'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport { blue } from '@material-ui/core/colors'\nimport { Form } from 'react-final-form'\nimport Space from '../../components/commons/Space'\nimport { InputField, SelectField } from '../../components/fields'\nimport { UpdateUserCtx } from '../../constant/contexts'\nimport { useUpdateUser } from '../../services/user/user-query'\nimport { Role } from '../../services/auth/auth-types'\nimport { UpdateUserParams } from '../../services/user/user-types'\nimport SaveIcon from '@material-ui/icons/Save'\nimport { Paper, Theme } from '@material-ui/core'\nimport { capitalize } from 'lodash'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    layout: {\n      padding: 20,\n    },\n    avatar: {\n      backgroundColor: blue[100],\n      color: blue[600],\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  }),\n)\n\ninterface UpdateUserFormValues extends Omit<UpdateUserParams, 'userId'> {}\n\nconst UpdateUser = () => {\n  const classes = useStyles()\n\n  const { mutate: updateUser } = useUpdateUser()\n  const [state, setState, { reset }] = useContext(UpdateUserCtx)\n  const { visible, userId, name, password, role } = state\n  const handleClose = useCallback(() => {\n    reset()\n  }, [reset])\n\n  const onSubmit = useCallback(\n    (values: UpdateUserFormValues) => {\n      const { name, password, role } = values\n      updateUser(\n        {\n          userId,\n          name,\n          password,\n          role,\n        },\n        {\n          onSuccess: () => {\n            handleClose()\n          },\n        },\n      )\n    },\n    [handleClose, updateUser, userId],\n  )\n\n  const roleOptions = useMemo(() => {\n    const options: BaseOptions[] = [\n      { value: Role.USER, label: capitalize(Role.USER) },\n      { value: Role.MANAGER, label: capitalize(Role.MANAGER) },\n      { value: Role.ADMIN, label: capitalize(Role.ADMIN) },\n    ]\n    return options\n  }, [])\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={visible}\n    >\n      <Paper className={classes.layout}>\n        <Form<UpdateUserFormValues>\n          onSubmit={onSubmit}\n          initialValues={{\n            name,\n            password,\n            role,\n          }}\n        >\n          {({ handleSubmit }) => {\n            return (\n              <Space direction=\"column\">\n                <InputField name=\"name\" label=\"Name\" />\n                {/* <InputField name=\"password\" label=\"Password\" /> */}\n                <SelectField name=\"role\" label=\"Role\" options={roleOptions} />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                  startIcon={<SaveIcon />}\n                  onClick={handleSubmit}\n                >\n                  Save\n                </Button>\n              </Space>\n            )\n          }}\n        </Form>\n      </Paper>\n    </Dialog>\n  )\n}\nexport default UpdateUser\n","import { Box, Button } from '@material-ui/core'\nimport { capitalize } from 'lodash'\nimport { useCallback, useContext } from 'react'\nimport BasicList from '../../components/BasicList'\nimport Page from '../../components/commons/Page'\nimport Space from '../../components/commons/Space'\nimport { UpdateUserCtx } from '../../constant/contexts'\nimport { Role, UserEntity } from '../../services/auth/auth-types'\nimport {\n  useChangeRole,\n  useGetUsers,\n  useUpdateUser,\n} from '../../services/user/user-query'\nimport { withCtx } from '../../utils/helper'\nimport UpdateUser from './UpdateUser'\n\nconst Admin = () => {\n  const { data: users } = useGetUsers()\n  const { mutate: changeRole } = useChangeRole()\n  const [, setState] = useContext(UpdateUserCtx)\n\n  const renderButtonAction = useCallback(\n    (userId: string, userRole: Role, role: Role) => {\n      return (\n        <Button\n          key={`${userId}-${userRole}-${role}`}\n          variant=\"contained\"\n          color={userRole === role ? 'secondary' : 'default'}\n          style={{ fontWeight: 'bold' }}\n          size=\"small\"\n          // disabled={role === Role.USER}\n          onClick={() => {\n            userRole !== role &&\n              changeRole({\n                userId,\n                role,\n              })\n          }}\n        >\n          {capitalize(role)}\n        </Button>\n      )\n    },\n    [changeRole],\n  )\n\n  const renderActions = useCallback(\n    (data: UserEntity) => {\n      const { id: userId, name, role: userRole } = data\n      const roles = [Role.USER, Role.MANAGER, Role.ADMIN]\n      return (\n        <Space spacing={10}>\n          <Space spacing={10}>\n            {roles.map((role) => renderButtonAction(userId, userRole, role))}\n          </Space>\n          <Button\n            variant=\"outlined\"\n            color={'primary'}\n            style={{ fontWeight: 'bold' }}\n            size=\"small\"\n            onClick={() => {\n              setState({\n                visible: true,\n                userId,\n                name,\n                role: userRole,\n              })\n            }}\n          >\n            Edit\n          </Button>\n        </Space>\n      )\n    },\n    [renderButtonAction, setState],\n  )\n  return (\n    <Page title=\"Admin\">\n      <BasicList\n        data={users}\n        columns={['name', 'email', 'balance']}\n        renderActions={renderActions}\n      />\n      <UpdateUser />\n    </Page>\n  )\n}\n\nexport default withCtx(UpdateUserCtx)(Admin)\n","import { useMemo } from 'react'\nimport { useGetTransactions } from '../../services/transaction/transaction-query'\nimport { Bar } from 'react-chartjs-2'\nimport dayjs from 'dayjs'\n\nconst colors = ['#91cf96', '#c881d2', '#ffbaa2', '#29b6f6'] as const\n\nconst dataSetOpts = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'white',\n  // backgroundColor: 'rgba(75,192,192,0.4)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  // pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  // pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10,\n  responsive: true,\n}\n\nconst TransactionChart = () => {\n  const { data: transactions } = useGetTransactions()\n  // const { data: transactionsHistory } = useGetTransactionsHistory()\n  const data = useMemo(() => {\n    const data = {\n      labels: transactions\n        ? transactions.map((d) => dayjs(d.date).format('DD/MM/YYYY hh:mm'))\n        : [],\n      datasets: [\n        {\n          // ...dataSetOpts,\n          label: 'Price',\n          yAxisID: 'Price',\n          borderColor: colors[0],\n          pointBorderColor: colors[0],\n          pointHoverBackgroundColor: colors[0],\n          // pointHoverBorderColor: colors[1],\n          data: transactions ? transactions.map((d) => d.price) : [],\n        },\n        {\n          // ...dataSetOpts,\n          label: 'Remain',\n          yAxisID: 'Remain',\n          borderColor: colors[1],\n          pointBorderColor: colors[1],\n          pointHoverBackgroundColor: colors[1],\n          // pointHoverBorderColor: colors[1],\n          data: transactions ? transactions.map((d) => d.remain) : [],\n        },\n        {\n          // ...dataSetOpts,\n          label: 'Total User',\n          yAxisID: 'TotalUser',\n          borderColor: colors[2],\n          pointBorderColor: colors[2],\n          pointHoverBackgroundColor: colors[2],\n          // pointHoverBorderColor: colors[0],\n          data: transactions ? transactions.map((d) => d.totalUser) : [],\n        },\n      ],\n    }\n    return data\n  }, [transactions])\n\n  return (\n    <div>\n      <Bar\n        type=\"bar\"\n        height={100}\n        data={data}\n        options={{\n          scales: {\n            Price: {\n              title: {\n                text: 'Price',\n                display: true,\n              },\n              type: 'linear',\n              position: 'left',\n              min: 0,\n              max: 1000,\n              ticks: {\n                stepSize: 100,\n                color: colors[0],\n              },\n            },\n            Remain: {\n              title: {\n                text: 'Remain',\n                display: true,\n              },\n              type: 'linear',\n              position: 'left',\n              min: 0,\n              max: 1000,\n              ticks: {\n                stepSize: 100,\n                color: colors[1],\n              },\n            },\n            TotalUser: {\n              title: {\n                text: 'TotalUser',\n                display: true,\n              },\n              type: 'linear',\n              position: 'right',\n              min: 0,\n              max: 5,\n              ticks: {\n                stepSize: 1,\n                color: colors[2],\n              },\n            },\n          },\n        }}\n      />\n    </div>\n  )\n}\nexport default TransactionChart\n","import React from 'react'\nimport Page from '../../components/commons/Page'\nimport TransactionChart from './TransactionCharts'\n\nconst Dashboard = () => {\n  return (\n    <Page title=\"Dashboard\">\n      <TransactionChart />\n    </Page>\n  )\n}\n\nexport default Dashboard\n","import { PropsWithChildren } from 'react'\nimport { useCurrUser } from '../../services/auth/auth-query'\nimport { Role } from '../../services/auth/auth-types'\n\ninterface AuthenlizeProps {\n  role: Role[]\n}\nconst Authenlize = (props: PropsWithChildren<AuthenlizeProps>) => {\n  const { data } = useCurrUser()\n  return data?.role && props.role.includes(data?.role) ? (\n    <>{props.children}</>\n  ) : (\n    <></>\n  )\n}\nexport default Authenlize\n","import Page from '../../components/commons/Page'\nimport BasicList from '../../components/BasicList'\nimport { useGetPayments } from '../../services/payment/payment-query'\nimport { Role } from '../../services/auth/auth-types'\nimport Authenlize from '../../components/commons/Authenlize'\nimport { lazy, Suspense } from 'react'\nconst PaymentForm = lazy(() => import('./PaymentForm'))\n\nconst Payment = () => {\n  const { data: payments } = useGetPayments()\n\n  return (\n    <Page title={'Payment Management'}>\n      <Authenlize role={[Role.ADMIN, Role.MANAGER]}>\n        <Suspense fallback={<div>Loading...</div>}>\n          <PaymentForm />\n        </Suspense>\n      </Authenlize>\n      <BasicList\n        data={payments}\n        columns={[\n          'ref',\n          'userName',\n          'price',\n          'type',\n          'resource',\n          'transaction',\n          'date',\n        ]}\n      />\n    </Page>\n  )\n}\nexport default Payment\n","import { makeStyles, Modal } from '@material-ui/core'\nimport { capitalize } from 'lodash'\nimport { useCallback } from 'react'\nimport { Form } from 'react-final-form'\nimport { InputField } from './fields'\nexport const useAppModalStyles = makeStyles({\n  appModal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  layout: {\n    display: 'flex',\n    flexFlow: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    background: '#FFFFFF',\n    padding: '2.188rem',\n    borderRadius: '1.25rem',\n    '&:focus': {\n      outline: 'unset',\n    },\n  },\n  header: {\n    marginBottom: '0.625rem',\n    textAlign: 'left',\n  },\n  closeIcon: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: '100%',\n  },\n  body: {\n    marginBottom: '1.625rem',\n    textAlign: 'center',\n  },\n  footer: {\n    display: 'flex',\n    justifyContent: 'center',\n    '& > *:first-of-type(1)': {\n      marginRight: '0.625rem',\n    },\n  },\n})\n\nexport interface ModalCreateProps {\n  visible: boolean\n  fieldNames: string[]\n  onSubmit: (values: AnyObject) => void\n  closeModal: () => void\n  className?: string\n}\nconst ModalCreate = (props: ModalCreateProps) => {\n  const { visible, className, fieldNames, onSubmit, closeModal } = props\n\n  const renderField = useCallback((fieldName: string) => {\n    return (\n      <InputField\n        key={fieldName}\n        name={fieldName}\n        label={capitalize(fieldName)}\n        placeholder={capitalize(fieldName)}\n        required={true}\n      />\n    )\n  }, [])\n\n  const classes = useAppModalStyles()\n\n  return (\n    <Modal\n      open={visible}\n      className={`${classes.appModal} ${className}`}\n      aria-labelledby=\"app-modal-title\"\n      aria-describedby=\"app-modal-description\"\n      disablePortal\n      disableEnforceFocus\n      disableAutoFocus\n      disableRestoreFocus\n      onBackdropClick={closeModal}\n    >\n      <div className={`content ${classes.layout}`}>\n        <Form\n          initialValues={{}}\n          onSubmit={async (v) => {\n            try {\n              await onSubmit(v)\n              closeModal()\n            } catch (error) {\n              return error\n            }\n          }}\n        >\n          {({ handleSubmit, submitError }) => {\n            return (\n              <form>\n                <h3 style={{ color: 'red' }}>{submitError}</h3>\n                {fieldNames.map(renderField)}\n                <button type=\"button\" name=\"submit\" onClick={handleSubmit}>\n                  Submit\n                </button>\n              </form>\n            )\n          }}\n        </Form>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ModalCreate\n","import styled from '@emotion/styled'\nimport { Button } from '@material-ui/core'\nimport { useCallback, useState } from 'react'\nimport ModalCreate, { ModalCreateProps } from './ModalCreate'\n\nconst Layout = styled.div`\n  margin: 20px 0;\n`\n\ninterface AddButtonProps\n  extends Omit<ModalCreateProps, 'visible' | 'closeModal'> {\n  name: string\n}\nconst AddButton = (props: AddButtonProps) => {\n  const { name, fieldNames, onSubmit } = props\n  const [visible, setVisible] = useState(false)\n  const openModal = useCallback(() => {\n    setVisible(true)\n  }, [])\n\n  const closeModal = useCallback(() => {\n    setVisible(false)\n  }, [])\n\n  const onModalSubmit = useCallback(\n    (values: AnyObject) => {\n      onSubmit(values)\n    },\n    [onSubmit],\n  )\n  return (\n    <Layout>\n      <Button variant=\"outlined\" color=\"primary\" onClick={openModal}>\n        {name}\n      </Button>\n      <ModalCreate\n        visible={visible}\n        fieldNames={fieldNames}\n        onSubmit={onModalSubmit}\n        closeModal={closeModal}\n      />\n    </Layout>\n  )\n}\n\nexport default AddButton\n","import AddButton from '../../components/AddButton'\nimport BasicList from '../../components/BasicList'\nimport Authenlize from '../../components/commons/Authenlize'\nimport Page from '../../components/commons/Page'\nimport { Role } from '../../services/auth/auth-types'\nimport {\n  useCreateResource,\n  useGetResources,\n} from '../../services/resource/resource-query'\nimport { CreateResourceParams } from '../../services/resource/resource-types'\n\nconst Resource = () => {\n  const { data: resources } = useGetResources()\n  const { mutate: createResource } = useCreateResource()\n  return (\n    <Page title=\"Resource\">\n      <Authenlize role={[Role.ADMIN, Role.MANAGER]}>\n        <AddButton\n          fieldNames={['name', 'price']}\n          name={'Add Resource'}\n          onSubmit={(v) => {\n            const { name, price } = v as CreateResourceParams\n            console.log(v)\n            createResource({\n              name,\n              price,\n            })\n          }}\n        />\n      </Authenlize>\n      <BasicList data={resources} columns={['ref', 'name', 'price']} />\n    </Page>\n  )\n}\n\nexport default Resource\n","import styled from '@emotion/styled'\nimport { useMemo } from 'react'\nimport { Form } from 'react-final-form'\nimport { InputField, MultiSelectField } from '../../components/fields'\nimport { useGetResources } from '../../services/resource/resource-query'\nimport { useCreateTransaction } from '../../services/transaction/transaction-query'\nimport { CreateTransactionParams } from '../../services/transaction/transaction-types'\nimport { useGetUsers } from '../../services/user/user-query'\n\nconst FormLayout = styled.form`\n  margin: 20px;\n\n  > button {\n    margin-top: 20px;\n  }\n`\n\ninterface CreateTransactionFormValues extends CreateTransactionParams {}\n\nconst TransactionForm = () => {\n  const { mutate: createTransaction } = useCreateTransaction()\n  const { data: users } = useGetUsers()\n  const { data: resources } = useGetResources()\n  const usersOption = useMemo(() => {\n    return (\n      users?.map(\n        ({ id, name }) => ({ value: id, label: name } as BaseOptions),\n      ) || []\n    )\n  }, [users])\n\n  const resourcesOption = useMemo(() => {\n    return (\n      resources?.map(\n        ({ id, name }) => ({ value: id, label: name } as BaseOptions),\n      ) || []\n    )\n  }, [resources])\n\n  return (\n    <Form<CreateTransactionFormValues>\n      onSubmit={(values) => {\n        createTransaction(values)\n      }}\n      initialValues={{\n        userIds: [],\n        resourceIds: [],\n      }}\n    >\n      {({ handleSubmit }) => {\n        return (\n          <FormLayout>\n            <InputField name=\"price\" label=\"Price\" required />\n            <MultiSelectField\n              name=\"userIds\"\n              label=\"User\"\n              options={usersOption}\n              required\n            />\n            <MultiSelectField\n              name=\"resourceIds\"\n              label=\"Resource\"\n              options={resourcesOption}\n              required\n            />\n\n            <button type=\"button\" title=\"button\" onClick={handleSubmit}>\n              Submit\n            </button>\n          </FormLayout>\n        )\n      }}\n    </Form>\n  )\n}\n\nexport default TransactionForm\n","import Page from '../../components/commons/Page'\nimport BasicList from '../../components/BasicList'\nimport { useGetTransactions } from '../../services/transaction/transaction-query'\nimport TransactionForm from './TransactionForm'\nimport Authenlize from '../../components/commons/Authenlize'\nimport { Role } from '../../services/auth/auth-types'\n\nconst Transaction = () => {\n  const { data: transactions } = useGetTransactions()\n\n  return (\n    <Page title={'Transaction Management'}>\n      <Authenlize role={[Role.ADMIN, Role.MANAGER]}>\n        <TransactionForm />\n      </Authenlize>\n      <BasicList\n        data={transactions}\n        columns={['ref', 'totalUser', 'remain', 'price', 'date', 'completed']}\n      />\n    </Page>\n  )\n}\nexport default Transaction\n","import { useCreateUser, useGetUsers } from '../../services/user/user-query'\nimport Page from '../../components/commons/Page'\nimport BasicList from '../../components/BasicList'\nimport { Role, SigninParams } from '../../services/auth/auth-types'\nimport Authenlize from '../../components/commons/Authenlize'\nimport AddButton from '../../components/AddButton'\n\nconst Users = () => {\n  const { data: users } = useGetUsers()\n  const { mutate: createUser } = useCreateUser()\n\n  return (\n    <Page title={'User Management'}>\n      <Authenlize role={[Role.ADMIN]}>\n        <AddButton\n          fieldNames={['name', 'email', 'password']}\n          name={'Add User'}\n          onSubmit={(v) => {\n            const { email, password, name } = v as SigninParams\n            console.log(v)\n            createUser({\n              email,\n              password,\n              name,\n            })\n          }}\n        />\n      </Authenlize>\n      <BasicList data={users} columns={['name', 'email', 'balance']} />\n    </Page>\n  )\n}\nexport default Users\n","import { Switch, Route, Redirect } from 'react-router-dom'\nimport Layout from '../components/layout'\nimport paths from '../constant/paths'\nimport Admin from '../pages/Admin'\nimport Dashboard from '../pages/Dashboard'\nimport Payment from '../pages/Payment'\nimport Resource from '../pages/Resource'\nimport Transaction from '../pages/Transaction'\nimport Users from '../pages/User'\nimport { useCurrUser } from '../services/auth/auth-query'\n\nexport const ProtectedRoute = () => {\n  const { data: user } = useCurrUser()\n  return (\n    <Layout>\n      <Switch>\n        <Redirect exact from=\"/\" to={paths.dashboard()} />\n        <Route path={paths.dashboard()} component={Dashboard} />\n        <Route path={paths.users()} component={Users} />\n        <Route path={paths.resources()} component={Resource} />\n        <Route path={paths.transactions()} component={Transaction} />\n        <Route path={paths.payments()} component={Payment} />\n        {process.env.REACT_APP_ADMIN_EMAIL &&\n          user?.email === process.env.REACT_APP_ADMIN_EMAIL && (\n            <Route path={paths.admin()} component={Admin} />\n          )}\n        <Redirect to={paths.notFound()} />\n      </Switch>\n    </Layout>\n  )\n}\n","import { useSignIn } from '../../services/auth/auth-query'\nimport { SigninParams } from '../../services/auth/auth-types'\nimport { Form } from 'react-final-form'\nimport { InputField } from '../../components/fields'\nimport styled from '@emotion/styled'\nimport Space from '../../components/commons/Space'\n\nconst Layout = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst SignIn = () => {\n  const { mutateAsync: signIn } = useSignIn()\n  return (\n    <Layout>\n      <Form<SigninParams>\n        initialValues={{\n          email: 'test@gmail.com',\n          password: '123456',\n        }}\n        onSubmit={async (values) => {\n          try {\n            await signIn(values)\n          } catch (error) {\n            return error\n          }\n        }}\n      >\n        {({ handleSubmit }) => {\n          return (\n            <form>\n              <Space direction=\"column\" justify=\"center\" alignItem=\"center\">\n                <h1>Tom-Tom Manager</h1>\n                <div\n                  style={{\n                    width: 'max-content',\n                  }}\n                >\n                  <h2>Register Or SignIn</h2>\n                  <label htmlFor=\"email\">Email</label>\n                  <InputField id=\"email\" name=\"email\" type=\"email\" />\n                  <label htmlFor=\"password\">Password</label>\n                  <InputField id=\"password\" name=\"email\" type=\"password\" />\n                  <button type=\"button\" onClick={handleSubmit}>\n                    Submit\n                  </button>\n                </div>\n              </Space>\n            </form>\n          )\n        }}\n      </Form>\n    </Layout>\n  )\n}\n\nexport default SignIn\n","import { Redirect, Route, Switch } from 'react-router'\nimport PageNotFound from '../pages/404'\nimport { useApiHealth, useCurrUser } from '../services/auth/auth-query'\nimport { useMemo } from 'react'\nimport { ProtectedRoute } from './protected'\nimport paths from '../constant/paths'\nimport SignIn from '../pages/Auth'\n\nexport const Routes = () => {\n  useApiHealth()\n  const { data, isLoading } = useCurrUser()\n  const isAuthorized = useMemo(() => {\n    return !!data\n  }, [data])\n\n  return isLoading ? (\n    <>Loading...</>\n  ) : (\n    <Switch>\n      {!isAuthorized ? (\n        <Route path={paths.signIn()} component={SignIn} />\n      ) : (\n        <Redirect from={paths.signIn()} to=\"/\" />\n      )}\n\n      <Route path={paths.notFound()} component={PageNotFound} />\n\n      {!isAuthorized ? <Redirect to={paths.signIn()} /> : <ProtectedRoute />}\n\n      <Redirect to={paths.notFound()} />\n    </Switch>\n  )\n}\n","import i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport th from './th.json'\nimport en from './en.json'\n\nconst resources = {\n  th: {\n    translation: th,\n  },\n  en: {\n    translation: en,\n  },\n}\n\ni18next.use(initReactI18next).init({\n  resources,\n  fallbackLng: 'en',\n  lng: 'th',\n  // debug: true,\n})\n\nexport default i18next\n","/* eslint-disable no-extend-native */\nimport dayJS from 'dayjs'\nimport timezone from 'dayjs/plugin/timezone'\nimport utc from 'dayjs/plugin/utc'\nimport customParseFormat from 'dayjs/plugin/customParseFormat'\n\ndayJS.extend(utc)\ndayJS.extend(timezone)\ndayJS.extend(customParseFormat)\ndayJS.tz.setDefault('Asia/Bangkok')\n","import './App.css'\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { Routes } from './routes'\nimport { ReactQueryDevtools } from 'react-query-devtools'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { I18nextProvider } from 'react-i18next'\nimport { Suspense } from 'react'\nimport i18next from './constant/i18n'\nimport './initialize'\n\nconst queryClient = new QueryClient()\n\nconst App = () => {\n  return (\n    <I18nextProvider i18n={i18next}>\n      <QueryClientProvider client={queryClient}>\n        <Router>\n          <Suspense fallback={<div>...loading</div>}>\n            <Routes />\n          </Suspense>\n        </Router>\n        <ReactQueryDevtools initialIsOpen={false} />\n      </QueryClientProvider>\n    </I18nextProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nrequire('dotenv').config()\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import { Box, TextField, TextFieldProps } from '@material-ui/core'\n\nexport type InputProps = TextFieldProps\n\nexport const Input = (props: InputProps) => {\n  const { disabled = false, ...restProps } = props\n\n  return (\n    <Box style={{ marginTop: 20, marginBottom: 20 }}>\n      <TextField variant=\"outlined\" disabled={disabled} {...restProps} />\n    </Box>\n  )\n}\nexport default Input\n","import {\n  makeStyles,\n  createStyles,\n  MenuItem,\n  Chip,\n  FormControl,\n  Input,\n  InputLabel,\n  Select,\n  Theme,\n  useTheme,\n} from '@material-ui/core'\nimport React, { useCallback, useMemo } from 'react'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      maxWidth: 300,\n    },\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    chip: {\n      margin: 2,\n    },\n    noLabel: {\n      marginTop: theme.spacing(3),\n    },\n  }),\n)\n\nconst ITEM_HEIGHT = 48\nconst ITEM_PADDING_TOP = 8\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n}\nfunction getStyles(name: string, personName: string[], theme: Theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  }\n}\n\nexport interface MultiSelectProps {\n  label: string\n  options: BaseOptions[]\n  value?: string[]\n  onChange?: (values: string[]) => void\n}\nconst MultiSelect = (props: MultiSelectProps) => {\n  const { label, value = [], options, onChange } = props\n  const classes = useStyles()\n  const theme = useTheme()\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<{ value: unknown }>) => {\n      const value = event.target.value as string[]\n      onChange?.(value)\n    },\n    [onChange],\n  )\n\n  const optionsHash = useMemo(() => {\n    const hash: any = {}\n    options.forEach(({ value, label }) => {\n      hash[value] = label\n      hash[label] = value\n    })\n    return hash\n  }, [options])\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"demo-mutiple-chip-label\">{label}</InputLabel>\n      <Select\n        labelId=\"demo-mutiple-chip-label\"\n        id=\"demo-mutiple-chip\"\n        multiple\n        value={value}\n        onChange={handleChange}\n        input={<Input id=\"select-multiple-chip\" />}\n        renderValue={(selected) => (\n          <div className={classes.chips}>\n            {(selected as string[]).map((value) => (\n              <Chip\n                key={value}\n                label={optionsHash[value]}\n                className={classes.chip}\n              />\n            ))}\n          </div>\n        )}\n        MenuProps={MenuProps}\n      >\n        {options.map(({ label, value: v }) => (\n          <MenuItem key={v} value={v} style={getStyles(label, value, theme)}>\n            {label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default MultiSelect\n","import React, { useCallback } from 'react'\nimport RadioMui from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\n\nexport interface RadioProps {\n  label: string\n  options: BaseOptions[]\n  value?: any\n  onChange?: (value: any) => void\n}\nconst Radio = (props: RadioProps) => {\n  const { label, value, options, onChange } = props\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      onChange?.((event.target as HTMLInputElement).value)\n    },\n    [onChange],\n  )\n  const renderRadio = useCallback((option: BaseOptions) => {\n    return (\n      <FormControlLabel\n        key={option.value}\n        value={option.value}\n        control={<RadioMui />}\n        label={option.label}\n      />\n    )\n  }, [])\n\n  return (\n    <FormControl\n      component=\"fieldset\"\n      style={{ marginTop: 20, marginBottom: 20 }}\n    >\n      <FormLabel component=\"legend\">{label}</FormLabel>\n      <RadioGroup\n        aria-label=\"gender\"\n        name=\"gender1\"\n        value={value}\n        onChange={handleChange}\n      >\n        {options.map(renderRadio)}\n      </RadioGroup>\n    </FormControl>\n  )\n}\n\nexport default Radio\n","import {\n  FormControl,\n  InputLabel,\n  Theme,\n  Select as SelectMui,\n} from '@material-ui/core'\nimport { makeStyles, createStyles } from '@material-ui/core'\nimport React, { useCallback } from 'react'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      marginTop: 20,\n      marginBottom: 20,\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n)\n\nexport interface SelectProps {\n  label: string\n  value?: any\n  options: BaseOptions[]\n  onChange?: (value: string) => void\n}\nconst Select = (props: SelectProps) => {\n  const { label, value, options, onChange } = props\n  const classes = useStyles()\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n      const value = event.target.value as string\n      onChange?.(value)\n    },\n    [onChange],\n  )\n\n  return (\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n      <InputLabel\n        htmlFor=\"outlined-age-native-simple\"\n        style={{ backgroundColor: 'white', paddingRight: 6, paddingLeft: 6 }}\n      >\n        {label}\n      </InputLabel>\n      <SelectMui\n        native\n        value={value}\n        onChange={handleChange}\n        label=\"Age\"\n        inputProps={{\n          name: label,\n          id: 'outlined-age-native-simple',\n        }}\n      >\n        {/* <option aria-label=\"None\" value=\"\" /> */}\n        {options.map(({ value, label }) => (\n          <option key={value} value={value}>\n            {label}\n          </option>\n        ))}\n      </SelectMui>\n    </FormControl>\n  )\n}\n\nexport default Select\n","// import { makeStyles } from '@material-ui/core'\n// import { CSSProperties } from '@material-ui/styles'\n// import dayjs from 'dayjs'\n// import { AnyObject } from 'final-form'\n// import { ComponentType, useMemo } from 'react'\nimport { FieldProps, FieldRenderProps } from 'react-final-form'\nimport { Field as FieldFinalForm } from 'react-final-form'\n// import Text from '../../components/common/Text'\n\nimport { ComponentType, useMemo } from 'react'\nimport Text from '../commons/Text'\n\nexport const modifyComponent = <T extends unknown>(\n  Component: ComponentType<any>,\n) => (props: FieldRenderProps<T>) => {\n  const { input, meta, style, className, ...restProps } = props\n  const { error, touched } = meta\n  const isError = useMemo(() => {\n    return error && touched\n  }, [error, touched])\n  return (\n    <div className={`${className}`} style={style}>\n      <Component {...input} {...restProps} />\n      {isError && (\n        <Text color={'red'} size={12}>\n          {meta.error}\n        </Text>\n      )}\n    </div>\n  )\n}\n\nexport const makeField = <T extends any>(component: ComponentType<any>) => {\n  const newComponent = modifyComponent<T>(component)\n  const returnField = (\n    props: FieldProps<string, FieldRenderProps<string>> & T,\n  ) => <FieldFinalForm {...props} render={newComponent} />\n  return returnField\n}\n","import Input, { InputProps } from '../commons/Input'\nimport MultiSelect, { MultiSelectProps } from '../commons/MultiSelect'\nimport Radio, { RadioProps } from '../commons/Radio'\nimport Select, { SelectProps } from '../commons/Select'\nimport { makeField } from './tools'\n\nexport const InputField = makeField<InputProps>(Input)\nexport const MultiSelectField = makeField<MultiSelectProps>(MultiSelect)\nexport const SelectField = makeField<SelectProps>(Select)\nexport const RadioField = makeField<RadioProps>(Radio)\n","import styled from '@emotion/styled'\nimport {\n  Grid,\n  GridContentAlignment,\n  GridDirection,\n  GridItemsAlignment,\n  GridJustification,\n} from '@material-ui/core'\nimport { CSSProperties } from '@material-ui/styles'\nimport { flatten } from 'lodash'\nimport { HTMLAttributes } from 'react'\n\ninterface LayoutType {\n  direction?: GridDirection\n  spacing?: number\n  justify?: GridJustification\n  alignItem?: GridItemsAlignment\n  alignContent?: GridContentAlignment\n}\n\nconst Layout = styled.div<LayoutType>`\n  display: flex;\n  flex-flow: ${({ direction }) => direction};\n  justify-content: ${({ justify }) => justify};\n  align-items: ${({ alignItem }) => alignItem};\n  align-content: ${({ alignContent }) => alignContent};\n\n  > .space-item {\n    width: max-content;\n    ${({ direction, spacing }) =>\n      direction === 'row'\n        ? `margin-right: ${spacing}px`\n        : `margin-bottom: ${spacing}px`};\n\n    :last-of-type {\n      margin-right: 0;\n      margin-bottom: 0;\n    }\n  }\n`\n\ninterface SpaceProps extends LayoutType {\n  children: JSX.Element[] | JSX.Element\n  style?: CSSProperties\n}\nconst Space = (props: SpaceProps) => {\n  const {\n    direction = 'row',\n    spacing = 20,\n    alignContent,\n    alignItem,\n    justify,\n    children,\n    style,\n  } = props\n\n  return (\n    <Layout\n      className=\"space-warpper\"\n      direction={direction}\n      spacing={spacing}\n      alignContent={alignContent}\n      alignItem={alignItem}\n      justify={justify}\n      style={style}\n    >\n      {flatten([children]).map((elm, index) => {\n        return (\n          <div key={index} className=\"space-item\">\n            {elm}\n          </div>\n        )\n      })}\n      <Grid></Grid>\n    </Layout>\n  )\n}\n\nexport default Space\n","export const getToken = () => {\n  return localStorage.getItem('AUTH_TOKEN')\n}\n\nexport const setToken = (token: string) => {\n  localStorage.setItem('AUTH_TOKEN', token)\n}\n\nexport const removeToken = () => {\n  localStorage.removeItem('AUTH_TOKEN')\n}\n","import dayjs from 'dayjs'\nimport { groupBy } from 'lodash'\nimport { useMutation, useQuery, useQueryClient } from 'react-query'\nimport { api } from '../../utils/api'\nimport {\n  CreateTransactionParams,\n  CreateTransactionResponse,\n  GetTransactionsHistoryResponse,\n  GetTransactionsParams,\n  GetTransactionsResponse,\n  TransactionEntity,\n} from './transaction-types'\n\nexport const TRANSACTION_URL = 'transactions'\nexport const TRANSACTION_HISTORY_URL = `${TRANSACTION_URL}/history`\n\nexport const useGetTransactions = (params?: GetTransactionsParams) => {\n  return useQuery([TRANSACTION_URL, params], async () => {\n    const { data } = await api.tomtom.get<GetTransactionsResponse>(\n      TRANSACTION_URL,\n      params,\n    )\n    const transactions = data.transactions.map(modifyTransaction)\n    return transactions\n  })\n}\n\nexport const useGetTransactionsHistory = () => {\n  return useQuery([TRANSACTION_URL, TRANSACTION_HISTORY_URL], async () => {\n    const { data } = await api.tomtom.get<GetTransactionsHistoryResponse>(\n      TRANSACTION_HISTORY_URL,\n    )\n    const modify = data.transactions.map(modifyTransaction)\n\n    const transactions = groupBy(modify, ({ date }) =>\n      dayjs(date).format('DD/MM/YYYY hh:mm'),\n    )\n    return transactions\n  })\n}\n\nexport const useCreateTransaction = () => {\n  const queryClient = useQueryClient()\n  return useMutation(\n    [TRANSACTION_URL],\n    async (params: CreateTransactionParams) => {\n      const { userIds, resourceIds, price } = params\n      const { data } = await api.tomtom.post<CreateTransactionResponse>(\n        TRANSACTION_URL,\n        {\n          userIds,\n          resourceIds,\n          price: Number(price),\n        },\n      )\n      return data\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries([TRANSACTION_URL])\n      },\n    },\n  )\n}\n\nconst modifyTransaction = (transaction: TransactionEntity) => {\n  const {\n    ref,\n    users,\n    resources,\n    createdAt,\n    completed,\n    ...restTransactoion\n  } = transaction\n  return {\n    ...restTransactoion,\n    ref: ref.toString().padStart(6, '0'),\n    totalUser: users?.length || 0,\n    completed: completed ? 'Completed' : 'Pending',\n    date: dayjs(createdAt).tz('Asia/Bangkok').format('DD/MM/YYYY hh:mm:ss'),\n  }\n}\n","import styled from '@emotion/styled'\nimport { CSSProperties, ReactNode } from 'react'\n\nconst StyledText = styled.div<{\n  weight: number\n  size: number\n  color: string\n}>`\n  font-family: 'Kanit', sans-serif;\n  font-weight: ${({ weight }) => weight};\n  font-size: ${({ size }) => size / 16}rem;\n  color: ${({ color }) => color};\n  display: flex;\n\n  white-space: pre-wrap;\n  word-break: break-word;\n`\n\nexport type TextProps = {\n  children?: ReactNode\n  size?: number\n  weight?: 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900\n  className?: string\n  color?: string\n  style?: CSSProperties\n  wrap?: boolean\n}\n\nconst Text = (props: TextProps) => {\n  const {\n    children,\n    size = 17,\n    weight = 400,\n    className,\n    color = '#000000',\n    style,\n    wrap = true,\n    ...restProps\n  } = props\n  return (\n    <StyledText\n      size={size}\n      weight={weight}\n      className={wrap ? `${className}` : className}\n      color={color}\n      style={style}\n      {...restProps}\n    >\n      {children}\n    </StyledText>\n  )\n}\n\nexport default Text\n","import { useMutation, useQuery, useQueryClient } from 'react-query'\nimport { api } from '../../utils/api'\nimport {\n  CreateResourceParams,\n  CreateResourceResponse,\n  GetResourcesResponse,\n} from './resource-types'\n\nexport const RESOURCE_URL = 'resources'\n\nexport const useGetResources = () => {\n  return useQuery([RESOURCE_URL], async () => {\n    const { data } = await api.tomtom.get<GetResourcesResponse>(RESOURCE_URL)\n    return data.resources.map(({ ref, ...rest }) => ({\n      ...rest,\n      ref: ref.toString().padStart(6, '0'),\n    }))\n  })\n}\nexport const useCreateResource = () => {\n  const queryClient = useQueryClient()\n  return useMutation(\n    [RESOURCE_URL],\n    async (params: CreateResourceParams) => {\n      const { name, price } = params\n      const { data } = await api.tomtom.post<CreateResourceResponse>(\n        RESOURCE_URL,\n        {\n          name: name,\n          price: Number(price),\n        },\n      )\n      return data\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries([RESOURCE_URL])\n      },\n    },\n  )\n}\n"],"sourceRoot":""}