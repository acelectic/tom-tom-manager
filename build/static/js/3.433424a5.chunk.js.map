{"version":3,"sources":["../node_modules/react-final-form-listeners/dist/react-final-form-listeners.es.js","components/commons/Hidden.tsx","pages/Payment/PaymentForm.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_inheritsLoose","subClass","superClass","create","constructor","__proto__","Component","OnChangeState","_React$Component","props","_this","state","previous","input","value","_proto","componentDidUpdate","_this$props","children","setState","render","OnChange","_ref","name","createElement","Field","subscription","allowNull","Layout","styled","div","hide","Hidden","hidden","FormLayout","form","PaymentForm","createPayment","useCreatePayment","mutate","useState","formValues","setFormValues","users","useGetUsers","data","resources","useGetResources","transactions","useGetTransactions","userId","usersOption","useMemo","map","id","label","resourcesOption","transactionsOption","ref","typeOptions","PaymentType","BUY","PAID","onSubmit","values","onSuccess","reset","submitting","validating","handleSubmit","Space","direction","spacing","required","options","change","getRegisteredFields","includes","type","title","onClick"],"mappings":"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","file":"static/js/3.433424a5.chunk.js","sourcesContent":["import { createElement, Component } from 'react';\nimport { Field } from 'react-final-form';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar ExternallyChangedState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ExternallyChangedState, _React$Component);\n\n  function ExternallyChangedState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: props.input.value,\n      externallyChanged: false\n    };\n    return _this;\n  }\n\n  var _proto = ExternallyChangedState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        value = _this$props.input.value,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (value !== previous) {\n      this.setState({\n        previous: value,\n        externallyChanged: !active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return this.props.children(this.state.externallyChanged);\n  };\n\n  return ExternallyChangedState;\n}(Component);\n\nvar ExternallyChanged = function ExternallyChanged(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true,\n      value: true\n    },\n    allowNull: true,\n    render: function render(props) {\n      return createElement(ExternallyChangedState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnBlurState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnBlurState, _React$Component);\n\n  function OnBlurState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: !!props.meta.active\n    };\n    return _this;\n  }\n\n  var _proto = OnBlurState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (previous && !active) {\n      children();\n    }\n\n    if (previous !== active) {\n      this.setState({\n        previous: active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnBlurState;\n}(Component);\n\nvar OnBlur = function OnBlur(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true\n    },\n    render: function render(props) {\n      return createElement(OnBlurState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnChangeState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnChangeState, _React$Component);\n\n  function OnChangeState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: props.input.value\n    };\n    return _this;\n  }\n\n  var _proto = OnChangeState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        value = _this$props.input.value;\n    var previous = this.state.previous;\n\n    if (value !== previous) {\n      this.setState({\n        previous: value\n      });\n      children(value, previous);\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnChangeState;\n}(Component);\n\nvar OnChange = function OnChange(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      value: true\n    },\n    allowNull: true,\n    render: function render(props) {\n      return createElement(OnChangeState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnFocusState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnFocusState, _React$Component);\n\n  function OnFocusState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: !!props.meta.active\n    };\n    return _this;\n  }\n\n  var _proto = OnFocusState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (active && !previous) {\n      this.setState({\n        previous: active\n      });\n      children();\n    } else if (!active && previous) {\n      this.setState({\n        previous: active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnFocusState;\n}(Component);\n\nvar OnFocus = function OnFocus(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true\n    },\n    render: function render(props) {\n      return createElement(OnFocusState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nexport { ExternallyChanged, OnBlur, OnChange, OnFocus };\n","import styled from '@emotion/styled'\nimport { PropsWithChildren } from 'react'\n\nconst Layout = styled.div<{ hide?: boolean }>`\n  /* display: ${({ hide }) => (hide ? 'none' : 'unset')}; */\n`\n\ninterface HiddenProps {\n  hide?: boolean\n}\nconst Hidden = (props: PropsWithChildren<HiddenProps>) => {\n  return <Layout hidden={props.hide}>{props.children}</Layout>\n}\n\nexport default Hidden\n","import styled from '@emotion/styled'\nimport { useMemo, useState } from 'react'\nimport { Field, Form, FormSpy } from 'react-final-form'\nimport { OnChange } from 'react-final-form-listeners'\nimport Hidden from '../../components/commons/Hidden'\nimport Space from '../../components/commons/Space'\nimport { InputField, RadioField, SelectField } from '../../components/fields'\nimport { useCreatePayment } from '../../services/payment/payment-query'\nimport {\n  CreatePaymentParams,\n  PaymentType,\n} from '../../services/payment/payment-types'\nimport { useGetResources } from '../../services/resource/resource-query'\nimport { useGetTransactions } from '../../services/transaction/transaction-query'\nimport { useGetUsers } from '../../services/user/user-query'\n\nconst FormLayout = styled.form`\n  margin: 20px;\n\n  > button {\n    margin-top: 20px;\n  }\n`\n\ninterface CreatePaymentFormValues extends CreatePaymentParams {}\n\nconst PaymentForm = () => {\n  const { mutate: createPayment } = useCreatePayment()\n  const [formValues, setFormValues] = useState<CreatePaymentFormValues>()\n  const { data: users } = useGetUsers()\n  const { data: resources } = useGetResources()\n  const { data: transactions } = useGetTransactions({\n    userId: formValues?.userId,\n  })\n  const usersOption = useMemo(() => {\n    return (\n      users?.map(\n        ({ id, name }) => ({ value: id, label: name } as BaseOptions),\n      ) || []\n    )\n  }, [users])\n\n  const resourcesOption = useMemo(() => {\n    return (\n      resources?.map(\n        ({ id, name }) => ({ value: id, label: name } as BaseOptions),\n      ) || []\n    )\n  }, [resources])\n\n  const transactionsOption = useMemo(() => {\n    return (\n      transactions?.map(\n        ({ id, ref }) => ({ value: id, label: ref } as BaseOptions),\n      ) || []\n    )\n  }, [transactions])\n\n  const typeOptions = useMemo(\n    (): BaseOptions[] => [\n      {\n        value: PaymentType.BUY,\n        label: PaymentType.BUY,\n      },\n      {\n        value: PaymentType.PAID,\n        label: PaymentType.PAID,\n      },\n    ],\n    [],\n  )\n\n  return (\n    <Form<CreatePaymentFormValues>\n      onSubmit={(values, form) => {\n        // alert(JSON.stringify(values))\n        createPayment(values, {\n          onSuccess: () => {\n            form.reset()\n          },\n        })\n      }}\n      subscription={{ submitting: true, validating: true }}\n    >\n      {({ handleSubmit, values, form }) => {\n        return (\n          <FormLayout>\n            <Space direction=\"column\" spacing={5}>\n              <InputField name=\"price\" label=\"Price\" required />\n              <SelectField name=\"userId\" label=\"User\" options={usersOption} />\n              <OnChange name=\"userId\">\n                {() => {\n                  form.change('transactionId')\n                }}\n              </OnChange>\n              <RadioField\n                name=\"type\"\n                label=\"Payment Type\"\n                options={typeOptions}\n              />\n              <OnChange name=\"type\">\n                {(value) => {\n                  switch (value) {\n                    case PaymentType.BUY:\n                      if (\n                        form.getRegisteredFields().includes('transactionId')\n                      ) {\n                        form.change('transactionId')\n                      }\n                      break\n                    case PaymentType.PAID:\n                      if (form.getRegisteredFields().includes('resourceId')) {\n                        form.change('resourceId')\n                      }\n                      break\n                    default:\n                      break\n                  }\n                }}\n              </OnChange>\n              <Field name=\"type\">\n                {({ input }) => {\n                  return (\n                    <>\n                      <Hidden hide={input.value !== PaymentType.PAID}>\n                        <SelectField\n                          name=\"transactionId\"\n                          label=\"Transaction\"\n                          options={transactionsOption}\n                        />\n                      </Hidden>\n                      <Hidden hide={input.value !== PaymentType.BUY}>\n                        <SelectField\n                          name=\"resourceId\"\n                          label=\"Resource\"\n                          options={resourcesOption}\n                        />\n                      </Hidden>\n                    </>\n                  )\n                }}\n              </Field>\n              <button type=\"button\" title=\"button\" onClick={handleSubmit}>\n                Submit\n              </button>\n            </Space>\n            <FormSpy<CreatePaymentFormValues> subscription={{ values: true }}>\n              {({ values }) => {\n                setFormValues(values)\n                return <></>\n              }}\n            </FormSpy>\n          </FormLayout>\n        )\n      }}\n    </Form>\n  )\n}\n\nexport default PaymentForm\n"],"sourceRoot":""}